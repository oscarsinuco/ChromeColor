export const removeColors=(e,r,t)=>{let o=document.querySelector(e);if(!(t<1&&t>=0))return new Promise((e,r)=>{r("Error",console.error("Variability should be >= 0 and < 1"))});if(o){let a=o.getAttribute("src");if(a){let e=new Image;return e.src=a,o=e,new Promise((e,a)=>{o.onload=function(){let c=document.createElement("canvas");c.width=o.width,c.height=o.height;let n=c.getContext("2d"),l=["green","blue","red","yellow","black","orange","white"],i=!0;for(const e of r)-1==l.indexOf(e)&&(i=!1);n.drawImage(o,0,0,c.width,c.height);const s=n.getImageData(0,0,c.width,c.height);let d=(e,r,t)=>{switch(e){case"green":t.greenc&&(s.data[r+3]=1);break;case"blue":t.bluec&&(s.data[r+3]=1);break;case"red":t.redc&&(s.data[r+3]=1);break;case"yellow":t.yellowc&&(s.data[r+3]=1);break;case"black":t.blackc&&(s.data[r+3]=1);break;case"orange":t.orangec&&(s.data[r+3]=1);break;case"white":t.whitec&&(s.data[r+3]=1)}};if(i){const o=s.data.length;for(let e=0;e<o;e+=4){const o=e+4,c=s.data[o+0],n=s.data[o+1],l=s.data[o+2];let i=n>c&&n>l&&n>n*t&&l<230&&c<230&&n>255*t,g=l>c&&l>n&&l>l*t&&n<230&&c<230&&l>255*t,h=c>l&&c>n&&c>c*t&&n<120&&l<230&&c>t/5*255,b=c>l&&n>l&&c>c*t&&n>n*t&&l<100&&n>170&&c>170,w=c<100*t&&n<100*t&&l<100*t,u=c>l&&n>l&&c>c*t&&l<180&&n>1.2*t*170&&c>210*t,f=c>255*t&&n>255*t&l>255*t;if("string"==typeof r)d(r,o,{greenc:i,bluec:g,redc:h,yellowc:b,blackc:w,orangec:u,whitec:f});else if("object"==typeof r)try{for(const e of r)d(e,o,{greenc:i,bluec:g,redc:h,yellowc:b,blackc:w,orangec:u,whitec:f})}catch(e){a("Error",console.error("Color should be a string or array."));break}}n.putImageData(s,0,0),e(c)}else a("Error",console.error("Color names error. Colors should be 'blue' ,'red', 'yellow', 'black', 'orange', 'green' or 'white' "))}})}return new Promise((r,t)=>{t("Error",console.error(`Src provide in image is null, identifier: ${e}`))})}return new Promise((r,t)=>{t("Error",console.error(`Error when trying to find an item with identifier ${e}`))})};